package Lab6_HW;
import java.awt.*;
import simView.*;

public class csm3 extends ViewableDigraph {
	// constructor
	public csm3() {
		super("CSM2");
    	
		// client, server, server2, transducer 생성
		ViewableAtomic c = new client("client", 30);
		ViewableAtomic s = new server("server", 10);
		ViewableAtomic s2 = new server2("server2", 10);
		ViewableAtomic t = new transd("transducer", 500);
    	
		// viewer에 client, server, server2, transducer 추가
		add(c);
		add(s);
		add(s2);
		add(t);
		
		// coupling 설정
		addCoupling(c, "out_server", s, "in");		// client의 "out_server" port를 server의 "in" port에 연결
		addCoupling(c, "out_server2", s2, "in");	// client의 "out_server2" port를 server2의 "in" port에 연결
		addCoupling(c, "out_server", t, "ariv");	// client의 "out_server" port를 transducer의 "ariv" port에 연결
		addCoupling(c, "out_server2", t, "ariv");	// client의 "out_server2" port를 transducer의 "ariv" port에 연결
		
		addCoupling(s, "out", c, "in");				// server의 "out" port를 client의 "in" port에 연결	
		addCoupling(s2, "out", c, "in");			// server2의 "out" port를 client의 "in" port에 연결	
		addCoupling(s, "out", t, "solved");			// server의 "out" port를 transducer의 "solved" port에 연결	
		addCoupling(s2, "out", t, "solved");		// server2의 "out" port를 transducer의 "solved" port에 연결	
		addCoupling(t, "out", c, "in");				// transducer의 "out" port를 client의 "in" port에 연결
	}

    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(988, 621);
        ((ViewableComponent)withName("client")).setPreferredLocation(new Point(63, 272));
        ((ViewableComponent)withName("server")).setPreferredLocation(new Point(225, 72));
        ((ViewableComponent)withName("server2")).setPreferredLocation(new Point(187, 498));
        ((ViewableComponent)withName("transducer")).setPreferredLocation(new Point(574, 275));
    }
}
